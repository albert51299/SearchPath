<Window x:Class="MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM.Other"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d"
        Title="Search of the shortest path" Height="450" Width="800" WindowStartupLocation="CenterScreen"
        x:Name="mainWindow">
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Style.Triggers>
                <Trigger  Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
                <Trigger  Property="IsChecked" Value="True">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate TargetType="RadioButton" x:Key="radio">
            <Border BorderBrush="{TemplateBinding Property=BorderBrush}" BorderThickness="{TemplateBinding Property=BorderThickness}">
                <ContentControl Content="{TemplateBinding Content}"/>
            </Border>
        </ControlTemplate>
        <local:MouseButtonEventArgsToPointConverter x:Key="myConverter"/>
    </Window.Resources>
    <Grid>
        <GridSplitter HorizontalAlignment="Left" Height="0" Margin="0,30,0,0" VerticalAlignment="Top" Width="792" RenderTransformOrigin="0.185,-10.077"/>
        <RadioButton IsChecked="{Binding AllowNode}" Name="rbNode" Template="{StaticResource radio}" Width="50" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="3.634,9.688" Margin="10,10,0,0">
            <Image Source="/Resources/ImageForNode1.png" />
        </RadioButton>
        <RadioButton IsChecked="{Binding AllowEdge}" Name="rbEdge" Template="{StaticResource radio}" Width="45" Height="20" HorizontalAlignment="Left" Margin="62,10,0,0" VerticalAlignment="Top">
            <Image Source="/Resources/Edge.png"/>
        </RadioButton>
        <RadioButton IsChecked="{Binding AllowSelect}" Name="rbSelect" Template="{StaticResource radio}" Width="60" Height="20" HorizontalAlignment="Left" Margin="109,10,0,0" VerticalAlignment="Top">
            <Image Source="/Resources/Select.png"/>
        </RadioButton>
        <Button Command="{Binding ClearCommand}" Content="Clear" HorizontalAlignment="Left" Margin="627,8,0,0" VerticalAlignment="Top" Width="75"/>
        <Button Command="{Binding SearchCommand}" Content="Search path" HorizontalAlignment="Left" Margin="707,8,0,0" VerticalAlignment="Top" Width="75">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AllowSearch}" Value="False">
                            <Setter  Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Canvas Name="parentCanvas" Background="Transparent" Margin="10,35,10,10">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseDown}" />
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseUp}" />
                </i:EventTrigger>
                
                <i:EventTrigger EventName="MouseMove">
                    <cmd:EventToCommand
                                    Command="{Binding CanvasMouseMove}"
                                    EventArgsConverter="{StaticResource myConverter}"
                                    EventArgsConverterParameter="{Binding ElementName=parentCanvas}"
                                    PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ItemsControl ItemsSource="{Binding EdgesVM}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                Width="{Binding ElementName=parentCanvas, Path=ActualWidth}" 
                                Height="{Binding ElementName=parentCanvas, Path=ActualHeight}">
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Background="Transparent">
                            <Line Stroke="Black" StrokeThickness="2" 
                                  X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}">
                            </Line>
                            <Border Background="White" BorderThickness="2" Width="25" Height="20"
                                    Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Cost}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Selected}" Value="True">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Selected}" Value="True">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl ItemsSource="{Binding NodesVM}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                Width="{Binding ElementName=parentCanvas, Path=ActualWidth}" 
                                Height="{Binding ElementName=parentCanvas, Path=ActualHeight}">
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Background="Transparent">
                            <Ellipse Stroke="Black" StrokeThickness="2" Width="30" Height="30">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseDown, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseUp, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Selected}" Value="True">
                                                <Setter Property="Fill" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Selected}" Value="False">
                                                <Setter Property="Fill" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>

                            </Ellipse>
                            <TextBlock Text="{Binding Node}" Margin="5 5 0 0"></TextBlock>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding X}" />
                        <Setter Property="Canvas.Top" Value="{Binding Y}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>

        </Canvas>

        <TextBox Text="{Binding CostField}" IsEnabled="{Binding AddingEdge}" local:FocusExtension.IsFocused="{Binding AddingEdge}"  HorizontalAlignment="Left" Height="22" Margin="592,8,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30">
            <TextBox.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding SetEdgeCost}"
                            CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
            </TextBox.InputBindings>
        </TextBox>
        <TextBlock Height="22" Width="180" Text="Enter cost for edge here:" HorizontalAlignment="Left" Margin="412,8,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
    </Grid>
</Window>
    