<Window x:Class="MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM.Other"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d"
        Title="Search of the shortest path" Height="450" Width="800" WindowStartupLocation="CenterScreen"
        x:Name="mainWindow">
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Style.Triggers>
                <Trigger  Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
                <Trigger  Property="IsChecked" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate TargetType="RadioButton" x:Key="radio">
            <Border BorderBrush="{TemplateBinding Property=BorderBrush}" BorderThickness="{TemplateBinding Property=BorderThickness}">
                <ContentControl Content="{TemplateBinding Content}"/>
            </Border>
        </ControlTemplate>
        <local:MouseButtonEventArgsToPointConverter x:Key="myConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Height="25">
            <MenuItem Header="File">
                <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
                <MenuItem Header="Load" Command="{Binding LoadCommand}"/>
            </MenuItem>
        </Menu>

        <RadioButton Grid.Row="1" IsChecked="{Binding AllowNode}" Name="rbNode" Template="{StaticResource radio}" 
                     Width="50" Height="20" HorizontalAlignment="Left" Margin="2,0,0,0">
                <Image Source="/Resources/Node.png" />
                </RadioButton>
        <RadioButton Grid.Row="1" IsChecked="{Binding AllowEdge}" Name="rbEdge" Template="{StaticResource radio}" 
                     Width="45" Height="20" HorizontalAlignment="Left" Margin="54,0,0,0">
            <Image Source="/Resources/Edge.png"/>
        </RadioButton>
        <RadioButton Grid.Row="1" IsChecked="{Binding AllowSelect}" Name="rbSelect" Template="{StaticResource radio}" 
                     Width="60" Height="20" HorizontalAlignment="Left" Margin="101,0,0,0">
            <Image Source="/Resources/Select.png"/>
        </RadioButton>
        
        <Button Grid.Row="1" Command="{Binding ClearCommand}" Content="Clear" Height="22" Width="75" HorizontalAlignment="Right" Margin="0,0,82,0"/>
        <Button Grid.Row="1" Command="{Binding SearchCommand}" Content="Search path" Height="22" Width="75" HorizontalAlignment="Right" Margin="0,0,2,0">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AllowSearch}" Value="False">
                            <Setter  Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBlock Grid.Row="1" Text="Start:" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,455,0"/>
        <TextBlock Grid.Row="1" Text="Terminal:" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,370,0"/>

        <Canvas Grid.Row="1" Width="25" Height="25" Background="Transparent" Margin="0,0,95,0">
            <Ellipse Fill="Red" Stroke="Black" StrokeThickness="2" Width="25" Height="25"/>
            <TextBlock Background="Transparent" Text="{Binding Path=FirstSelected.Name}" FontWeight="Bold" Margin="5 3 0 0"></TextBlock>
            
            <Canvas.Style>
                <Style TargetType="Canvas">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FirstSelected}" Value="{x:Null}">
                            <Setter  Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Style>
            
        </Canvas>
        <Canvas Grid.Row="1" Width="25" Height="25" Background="Transparent" Margin="75,0,0,0">
            <Ellipse Fill="Red" Stroke="Black" StrokeThickness="2" Width="25" Height="25"/>
            <TextBlock Background="Transparent" Text="{Binding Path=SecondSelected.Name}" FontWeight="Bold" Margin="5 3 0 0"></TextBlock>

            <Canvas.Style>
                <Style TargetType="Canvas">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SecondSelected}" Value="{x:Null}">
                            <Setter  Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Style>

        </Canvas>

        <TextBlock Grid.Row="1" Height="18" Text="Enter cost for edge here:" Margin="0,0,197,0" HorizontalAlignment="Right"/>
        <TextBox Grid.Row="1" Text="{Binding CostField}" Height="22" Width="30" HorizontalAlignment="Right" Margin="0,0,162,0">

            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AwaitCost}" Value="True">
                            <Setter  Property="Visibility" Value="Visible"/>
                            <Setter Property="local:FocusExtension.IsFocused" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>

            <TextBox.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding SetEdgeCost}"
                            CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
            </TextBox.InputBindings>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction Command="{Binding LostFocusCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
        </TextBox>

        <Canvas Grid.Row="2" Name="parentCanvas" Background="Transparent" Margin="5,5,5,5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseDown}" />
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseUp}" />
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <cmd:EventToCommand
                                    Command="{Binding CanvasMouseMove}"
                                    EventArgsConverter="{StaticResource myConverter}"
                                    EventArgsConverterParameter="{Binding ElementName=parentCanvas}"
                                    PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ItemsControl ItemsSource="{Binding EdgesVM}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                Width="{Binding ElementName=parentCanvas, Path=ActualWidth}" 
                                Height="{Binding ElementName=parentCanvas, Path=ActualHeight}">
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Background="Transparent">
                            <Line Stroke="Black" StrokeThickness="2" 
                                  X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}">
                            </Line>
                            <Border Background="White" BorderThickness="2" Width="25" Height="20"
                                    Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Cost}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Selected}" Value="True">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Selected}" Value="True">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl ItemsSource="{Binding NodesVM}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                Width="{Binding ElementName=parentCanvas, Path=ActualWidth}" 
                                Height="{Binding ElementName=parentCanvas, Path=ActualHeight}">
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Background="Transparent">
                            <Ellipse Stroke="Black" StrokeThickness="2" Width="30" Height="30">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseDown, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseUp, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Selected}" Value="True">
                                                <Setter Property="Fill" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Selected}" Value="False">
                                                <Setter Property="Fill" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>

                            </Ellipse>
                            <TextBlock Background="Transparent" Text="{Binding Node}" Margin="5 5 0 0">
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseDown, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction 
                                        Command="{Binding Path=DataContext.NodeMouseUp, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                        CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                
                            </TextBlock>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding X}" />
                        <Setter Property="Canvas.Top" Value="{Binding Y}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Canvas>
    </Grid>
</Window>
    